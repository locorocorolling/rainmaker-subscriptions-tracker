services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Server Configuration
      - NODE_ENV=production
      - PORT=3001

      # CORS Configuration - Set to your custom domain
      - CORS_ORIGIN=${FRONTEND_URL}

      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}

      # Redis Configuration
      - REDIS_URL=${REDIS_URL}

      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d

      # Logging Configuration
      - LOG_LEVEL=info

      # API Configuration
      - API_RATE_LIMIT_WINDOW_MS=900000
      - API_RATE_LIMIT_MAX_REQUESTS=100

      # Email Service
      - RESEND_API_KEY=${RESEND_API_KEY}
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Build-time environment variable for Vite
        - VITE_API_URL=${BACKEND_URL}/api
    environment:
      # Runtime environment (if needed)
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=subscription_tracker
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      # App user environment variables for init script
      - MONGO_APP_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
    ports:
      - "27017:27017"
    restart: unless-stopped

  # Redis Cache/Queue
  redis:
    image: redis:7-alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data: